// Code generated by mockery v1.0.0
package mocks

import controller "github.com/projectriff/function-controller/pkg/controller"
import mock "github.com/stretchr/testify/mock"

// LagTracker is an autogenerated mock type for the LagTracker type
type LagTracker struct {
	mock.Mock
}

// BeginTracking provides a mock function with given fields: _a0
func (_m *LagTracker) BeginTracking(_a0 controller.Subscription) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(controller.Subscription) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Compute provides a mock function with given fields:
func (_m *LagTracker) Compute() map[controller.Subscription]controller.PartitionedOffsets {
	ret := _m.Called()

	var r0 map[controller.Subscription]controller.PartitionedOffsets
	if rf, ok := ret.Get(0).(func() map[controller.Subscription]controller.PartitionedOffsets); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[controller.Subscription]controller.PartitionedOffsets)
		}
	}

	return r0
}

// StopTracking provides a mock function with given fields: _a0
func (_m *LagTracker) StopTracking(_a0 controller.Subscription) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(controller.Subscription) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
